# -*- coding: utf-8 -*-
"""resume_bert.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eFaxw2ICq8VmOmlG_267MMpJpZCbmmPX
"""

!pip install sentence-transformers spacy
!python -m spacy download en_core_web_sm

import pandas as pd
import os, re
import spacy
from sentence_transformers import SentenceTransformer, util

nlp = spacy.load("en_core_web_sm")
sbert_model = SentenceTransformer('all-MiniLM-L6-v2')

jobs_df = pd.read_csv("naukri_com-job_sample.csv")

resumes_df = pd.read_csv("UpdatedResumeDataSet.csv")

print("âœ… Jobs shape:", jobs_df.shape)
print("âœ… Resumes shape:", resumes_df.shape)

print("\nSample Job Description:\n", jobs_df['jobdescription'].dropna().iloc[0][:400])
print("\nSample Resume:\n", resumes_df['Resume'].dropna().iloc[0][:400])

def extract_skills(text):
    doc = nlp(text)
    skills = []

    for ent in doc.ents:
        if ent.label_ in ["ORG", "PRODUCT", "WORK_OF_ART"]:
            skills.append(ent.text)

    regex_skills = re.findall(r'\b(Python|Java|C\+\+|SQL|AWS|NLP|TensorFlow|PyTorch|React|Angular|Docker|Kubernetes|Flask|Machine Learning|Deep Learning)\b',
                              text, re.I)
    return list(set(skills + regex_skills))

job_texts = jobs_df['jobdescription'].dropna().head(5).tolist()

resume_texts = resumes_df['Resume'].dropna().head(5).tolist()

for ridx, rtext in enumerate(resume_texts, 1):
    r_embed = sbert_model.encode(rtext, convert_to_tensor=True)
    r_skills = extract_skills(rtext)

print(f"\n============================")
print(f"ðŸ‘¤ Resume {ridx}")
print(f"Extracted Skills: {r_skills[:10]}")

for jidx, jtext in enumerate(job_texts, 1):
        j_embed = sbert_model.encode(jtext, convert_to_tensor=True)
        j_skills = extract_skills(jtext)

        similarity = util.cos_sim(r_embed, j_embed).item()
        overlap = set(r_skills).intersection(set(j_skills))

        print(f"\nðŸ“„ Job {jidx}")
        print(f"Similarity Score: {similarity:.2f}")
        print(f"JD Skills: {j_skills[:10]}")
        print(f"Matched Skills: {list(overlap)}")